<?php
bolt_decrypt( __FILE__ , 'W90gZv'); return 0;
##!!!##